package com.capgemini.springboot.microserviceconcurrencyconversion.entity;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

@FeignClient(name="forex-service" ,url="localhost:8000")
public interface CurrencyExchangeServiceProxy {

	  @Autowired
	  private CurrencyExchangeServiceProxy proxy;

	@GetMapping("/currency-exchange/from/{from}/to/{to}")
	  public CurrencyConversionBean retrieveExchangeValue
	    (@PathVariable("from") String from, @PathVariable("to") String to);
	
	
	  @GetMapping("/currency-converter-feign/from/{from}/to/{to}/quantity/{quantity}")
	  public CurrencyConversionBean convertCurrencyFeign(@PathVariable String from, @PathVariable String to,
	      @PathVariable BigDecimal quantity) {

	    CurrencyConversionBean response = proxy.retrieveExchangeValue(from, to);

	    logger.info("{}", response);

	    return new CurrencyConversionBean(response.getId(), from, to, response.getConversionMultiple(), quantity,
	        quantity.multiply(response.getConversionMultiple()), response.getPort());
	  }


}
